
 
                          DEFINE_PATCH_FUNCTION ARE_rain_probability 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x4a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_rain_probabilityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x4a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x4a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_rain_probabilityLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x4a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x4a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_rain_probability 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x4a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_snow_probability 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x4c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_snow_probabilityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x4c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x4c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_snow_probabilityLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x4c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x4c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_snow_probability 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x4c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_fog_probability 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x4e arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_fog_probabilityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x4e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x4e arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_fog_probabilityLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x4e > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x4e arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_fog_probability 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x4e value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_lightning_probability 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x50 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_lightning_probabilityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x50 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x50 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_lightning_probabilityLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x50 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x50 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_lightning_probability 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x50 value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_area_script 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x94 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x94 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_area_script 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x94 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_wed 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x8 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x8 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_wed 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x8 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_to_north 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x18 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x18 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_to_north 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x18 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_to_east 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x24 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x24 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_to_east 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x24 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_to_west 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x3c "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x3c "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_to_west 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x3c value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_to_south 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x30 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x30 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_to_south 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x30 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restmovie_day 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0xd4 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0xd4 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restmovie_day 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0xd4 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restmove_night 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0xdc "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0xdc "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restmove_night 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0xdc value 
                            END
                            
 
                       DEFINE_PATCH_FUNCTION ARE_outdoor STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_outdoor STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_day_night STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_day_night STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_weather STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_weather STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_city STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_city STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_forest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_forest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_dungeon STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_dungeon STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_extended_night STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_extended_night STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_rest_indoors STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_rest_indoors STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 DEFINE_PATCH_FUNCTION ARE_actorname  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_actorname 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_actor_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_actor_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_script_override 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x50 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x50 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_script_override 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x50 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_script_class 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x60 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x60 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_script_class 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x60 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_script_race 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x68 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x68 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_script_race 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x68 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_script_general 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x58 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x58 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_script_general 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x58 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_script_default 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_script_default 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_script_specifics 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x78 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x78 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_script_specifics 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x78 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_crefile 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x80 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x80 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_crefile 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x80 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_actor_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x80 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x80 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_actor_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x80 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_actor_x_coord_start 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_x_coord_startGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_x_coord_startLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_actor_x_coord_start 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_actor_y_coord_start 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_y_coord_startGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_y_coord_startLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_actor_y_coord_start 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_actor_x_coord_dest 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_x_coord_destGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_x_coord_destLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_actor_x_coord_dest 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_actor_y_coord_dest 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_y_coord_destGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x26 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x26 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_y_coord_destLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x26 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_actor_y_coord_dest 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x26 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_actor_removal_timer 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_removal_timerGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_actor_removal_timerLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_actor_removal_timer 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x38 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_dialog 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x48 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x48 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_dialog 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x48 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_door_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_door_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_door_id 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x20 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x20 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_door_id 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x20 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_door_icon 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x7c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_iconGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x7c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x7c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_iconLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x7c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x7c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_icon 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x7c + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_door_script 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x80 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x80 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_door_script 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x80 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_door_dialog 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0xb8 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0xb8 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_door_dialog 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0xb8 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_door_lock_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_lock_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_lock_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_lock_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_trap_detection_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x6c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_trap_detection_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x6c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x6c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_trap_detection_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x6c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x6c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_trap_detection_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x6c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_trap_removal_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x6e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_trap_removal_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x6e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x6e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_trap_removal_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x6e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x6e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_trap_removal_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x6e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_is_trapped 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x70 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_is_trappedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x70 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x70 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_is_trappedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x70 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x70 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_is_trapped 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x70 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_left 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_leftGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_leftLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_open_bb_left 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x38 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_top 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_topGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_topLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_open_bb_top 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_right 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_rightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_rightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_open_bb_right 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_bottom 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_bottomGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_open_bb_bottomLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_open_bb_bottom 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_left 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x40 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_leftGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x40 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x40 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_leftLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x40 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x40 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_closed_bb_left 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x40 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_top 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x42 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_topGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x42 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x42 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_topLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x42 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x42 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_closed_bb_top 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x42 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_right 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x44 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_rightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x44 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x44 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_rightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x44 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x44 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_closed_bb_right 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x44 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_bottom 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x46 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_bottomGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x46 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x46 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_door_closed_bb_bottomLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x46 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x46 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_door_closed_bb_bottom 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x46 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_container_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_container_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_container_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_lock_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_lock_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x26 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x26 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_lock_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x26 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_lock_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x26 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_trap_detection_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_detection_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_detection_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_trap_detection_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_trap_removal_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_removal_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_removal_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_trap_removal_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_trapped 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x30 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trappedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x30 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x30 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trappedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x30 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x30 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_trapped 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x30 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_trap_detected 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x32 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_detectedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x32 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x32 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_detectedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x32 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x32 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_trap_detected 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x32 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_trap_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x34 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x34 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x34 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x34 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x34 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_trap_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x34 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_trap_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x36 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x36 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x36 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_trap_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x36 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x36 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_trap_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x36 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_top_left 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_top_leftGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_top_leftLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_top_left 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x38 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_top_right 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_top_rightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_top_rightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_top_right 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_bottom_right 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bottom_rightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bottom_rightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_bottom_right 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_bottom_left 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bottom_leftGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bottom_leftLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_bottom_left 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_bb_left 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_leftGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_leftLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_bb_left 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x38 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_bb_top 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_topGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_topLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_bb_top 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_bb_right 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_rightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_rightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_bb_right 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_container_bb_bottom 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x3e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_bottomGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x3e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x3e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_bb_bottomLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x3e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x3e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_bb_bottom 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x3e + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_container_script 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x48 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x48 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_container_script 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x48 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_container_key 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x78 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x78 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_container_key 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x78 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_container_lockpick_strref 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x84 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_lockpick_strrefGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x84 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x84 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_container_lockpick_strrefLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x84 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x84 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_container_lockpick_strref 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x84 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_entrance_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_entrance_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_entrance_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_entrance_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_entrance_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_entrance_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_entrance_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_entrance_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_entrance_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_entrance_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_entrance_orientation 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_entrance_orientationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_entrance_orientationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_entrance_orientation 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_trigger_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_trigger_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_destination 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x38 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x38 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_destination 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x38 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_cursor 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x34 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_cursorGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x34 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x34 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_cursorLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x34 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x34 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_cursor 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x34 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_info 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x64 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_infoGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x64 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x64 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_infoLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x64 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x64 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_info 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x64 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_trigger_script 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x7c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x7c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_trigger_script 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x7c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_trigger_dest 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x38 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x38 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_trigger_dest 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x38 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_trigger_entrance  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x40 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x40 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_trigger_entrance 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x40 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbleft 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbleftGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbleftLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_bbleft 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbtop 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbtopGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbtopLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_bbtop 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbright 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbrightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x26 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x26 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbrightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x26 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_bbright 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x26 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbbottom 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x28 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbbottomGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x28 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x28 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_bbbottomLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x28 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x28 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_bbbottom 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x28 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_flags 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x60 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_flagsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x60 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x60 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_flagsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x60 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x60 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_flags 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x60 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_is_trapped 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x6c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_is_trappedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x6c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x6c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_is_trappedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x6c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x6c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_is_trapped 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x6c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trap_detected 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x6e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trap_detectedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x6e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x6e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trap_detectedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x6e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x6e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trap_detected 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x6e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trap_detection_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x68 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trap_detection_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x68 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x68 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trap_detection_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x68 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x68 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trap_detection_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x68 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trap_removal_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x6a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trap_removal_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x6a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x6a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trap_removal_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x6a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x6a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trap_removal_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x6a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_trap_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x70 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_trap_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x70 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x70 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_trap_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x70 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x70 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_trap_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x70 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_trap_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x72 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_trap_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x72 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x72 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_trap_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x72 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x72 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_trap_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x72 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_alt_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x84 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_alt_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x84 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x84 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_alt_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x84 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x84 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_alt_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x84 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_trigger_alt_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x86 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_alt_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x86 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x86 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_trigger_alt_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x86 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x86 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_trigger_alt_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x86 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_spawn_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_spawn_creature1 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x24 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x24 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature1 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x24 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x2c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x2c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x2c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature3 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x34 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x34 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature3 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x34 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature4 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x3c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x3c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature4 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x3c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature5 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x44 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x44 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature5 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x44 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature6 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x4c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x4c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature6 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x4c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature7 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x54 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x54 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature7 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x54 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature8 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x5c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x5c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature8 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x5c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature9 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x64 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x64 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature9 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x64 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_spawn_creature10 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x6c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x6c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_spawn_creature10 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x6c + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_count 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x74 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_countGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x74 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x74 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_countLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x74 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x74 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_count 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x74 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_base_number 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x76 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_base_numberGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x76 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x76 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_base_numberLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x76 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x76 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_base_number 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x76 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_frequency 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x78 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_frequencyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x78 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x78 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_frequencyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x78 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x78 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_frequency 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x78 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_method 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x7a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_methodGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x7a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x7a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_methodLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x7a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x7a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_method 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x7a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_maximum 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x84 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_maximumGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x84 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x84 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_maximumLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x84 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x84 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_maximum 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x84 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_probability_day 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x8c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_probability_dayGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x8c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x8c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_probability_dayLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x8c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x8c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_probability_day 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x8c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_probability_night 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x8e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_probability_nightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x8e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x8e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_probability_nightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x8e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x8e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_probability_night 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x8e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x98 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x98 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x98 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x98 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x98 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x98 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x99 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x99 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x99 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x99 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x99 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x99 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x9a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x9a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x9a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x9a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x9a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x9a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x9b + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x9b + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x9b + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x9b + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x9b + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x9b + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight5 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x9c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight5GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x9c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x9c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight5LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x9c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x9c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight5 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x9c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight6 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x9d + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight6GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x9d + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x9d + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight6LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x9d + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x9d + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight6 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x9d + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight7 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x9e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight7GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x9e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x9e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight7LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x9e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x9e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight7 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x9e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight8 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x9f + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight8GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x9f + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x9f + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight8LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x9f + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x9f + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight8 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x9f + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight9 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xa0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight9GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xa0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xa0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight9LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xa0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xa0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight9 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xa0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight10 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xa1 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight10GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xa1 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xa1 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_spawn_ee_weight10LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xa1 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xa1 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_spawn_ee_weight10 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xa1 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x28 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x28 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x28 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x28 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x28 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x28 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x2c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x2c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x2c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x2c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x2c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x2c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref5 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x30 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref5GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x30 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x30 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref5LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x30 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x30 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref5 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x30 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref6 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x34 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref6GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x34 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x34 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref6LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x34 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x34 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref6 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x34 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref7 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref7GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref7LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref7 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x38 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref8 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x3c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref8GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x3c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x3c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref8LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x3c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x3c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref8 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x3c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref9 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x40 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref9GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x40 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x40 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref9LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x40 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x40 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref9 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x40 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref10 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x44 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref10GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x44 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x44 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_strref10LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x44 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x44 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_strref10 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x44 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_count 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x98 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_countGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x98 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x98 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_countLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x98 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x98 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_count 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x98 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature1 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x48 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x48 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature1 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x48 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x50 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x50 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x50 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature3 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x58 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x58 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature3 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x58 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature4 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x60 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x60 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature4 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x60 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature5 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x68 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x68 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature5 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x68 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature6 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature6 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature7 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x78 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x78 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature7 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x78 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature8 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x80 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x80 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature8 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x80 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature9 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x88 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x88 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature9 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x88 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_restspawn_creature10 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x90 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x90 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_restspawn_creature10 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x90 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_probability_day 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa8 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_probability_dayGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa8 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa8 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_probability_dayLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa8 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa8 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_probability_day 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa8 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_probability_night 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xaa + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_probability_nightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xaa + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xaa + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_probability_nightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xaa + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xaa + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_probability_night 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xaa + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_max_number 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa4 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_max_numberGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa4 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa4 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_max_numberLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa4 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa4 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_max_number 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa4 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_enabled 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa6 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_enabledGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa6 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa6 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_enabledLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa6 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa6 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_enabled 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa6 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_removal 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x9c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_removalGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x9c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x9c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_removalLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x9c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x9c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_removal 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x9c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_maximum 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa4 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_maximumGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa4 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa4 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_maximumLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa4 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa4 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_maximum 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa4 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_difficulty 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x9a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_difficultyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x9a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x9a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_difficultyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x9a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x9a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_difficulty 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x9a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_wander 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_wanderGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_wanderLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_wander 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_restspawn_follow 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa2 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_followGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa2 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa2 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_restspawn_followLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa2 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa2 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_restspawn_follow 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa2 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_animation_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_animation_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_animation_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x28 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x28 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_animation_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x28 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_animation_height 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_heightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_heightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_animation_height 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x38 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_animation_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_animation_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_animation_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_animation_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_animation_active 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_activeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_animation_activeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_animation_active 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x24 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_ambient_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x0 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x0 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_radius 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_radiusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_radiusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_radius 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_base_time 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x84 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_base_timeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x84 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x84 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_base_timeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x84 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x84 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_base_time 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x84 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_time_deviation 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x88 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_time_deviationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x88 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x88 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_time_deviationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x88 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x88 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_time_deviation 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x88 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_volume 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_volumeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_volumeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_volume 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2e + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_ambient_sound1 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x30 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x30 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound1 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x30 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x38 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x38 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x38 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound3 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x40 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x40 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound3 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x40 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound4 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x48 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x48 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound4 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x48 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound5 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x50 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x50 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound5 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x50 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound6 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x58 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x58 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound6 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x58 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound7 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x60 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x60 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound7 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x60 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound8 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x68 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x68 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound8 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x68 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound9 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound9 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ARE_ambient_sound10 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x78 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x78 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_ambient_sound10 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x78 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_sound_number 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x80 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_sound_numberGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x80 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x80 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_sound_numberLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x80 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x80 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_sound_number 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x80 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_ambient_active 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_activeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_ambient_activeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_ambient_active 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_mapnote_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_mapnote_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_mapnote_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_mapnote_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_mapnote_text 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x4 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_textGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x4 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x4 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_textLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x4 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x4 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_mapnote_text 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x4 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_mapnote_text_loc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x8 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_text_locGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x8 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x8 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_text_locLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x8 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x8 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_mapnote_text_loc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x8 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_mapnote_color 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_colorGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_mapnote_colorLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_mapnote_color 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ARE_item_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ARE_read_item_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_secondary) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ARE_item_charges_1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_item_charges_1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_item_charges_1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_item_charges_1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_item_charges_2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xc + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_item_charges_2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xc + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xc + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_item_charges_2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xc + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xc + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_item_charges_2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xc + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_item_charges_3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xe + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_item_charges_3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xe + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xe + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_item_charges_3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xe + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xe + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_item_charges_3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xe + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_vertex_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x0 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_vertex_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x0 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x0 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_vertex_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x0 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x0 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_vertex_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x0 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ARE_vertex_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_vertex_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_vertex_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ARE_read_vertex_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2 + offset_secondary) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION ARE_trap_undetectable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_trap_undetectable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x60 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_reset_trap STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_reset_trap STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x60 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_party_required STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_party_required STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x60 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_trap_detectable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_trap_detectable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x60 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_trap_set_off_by_NPC STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x60 + offset_base) (BYTE_AT (0x60 + offset_base) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_trap_set_off_by_NPC STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x60 + offset_base) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_trigger_deactivated STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x61 + offset_base) (BYTE_AT (0x61 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x61 + offset_base) (BYTE_AT (0x61 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_trigger_deactivated STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x61 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_impassable_by_NPC STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x61 + offset_base) (BYTE_AT (0x61 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x61 + offset_base) (BYTE_AT (0x61 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_impassable_by_NPC STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x61 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_use_activation_point STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x61 + offset_base) (BYTE_AT (0x61 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x61 + offset_base) (BYTE_AT (0x61 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_use_activation_point STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x61 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_ambient_enabled STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_ambient_enabled STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x90 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_ambient_looping STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_ambient_looping STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x90 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_ambient_ignore_radius STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_ambient_ignore_radius STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x90 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_ambient_random_order STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x90 + offset_base) (BYTE_AT (0x90 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_ambient_random_order STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x90 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_enabled STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_enabled STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_transparent_black STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_transparent_black STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_non_self_illumination STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_non_self_illumination STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_partial STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_partial STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_synchronised STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_synchronised STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_wall_does_not_hide STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_wall_does_not_hide STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_invisible_in_dark STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x34 + offset_base) (BYTE_AT (0x34 + offset_base) BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_invisible_in_dark STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x34 + offset_base) BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_not_cover STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_not_cover STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x35 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_play_all_frames STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_play_all_frames STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x35 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_palette STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_palette STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x35 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_mirrored STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_mirrored STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x35 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_animation_show_in_combat STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x35 + offset_base) (BYTE_AT (0x35 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_animation_show_in_combat STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x35 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_0 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_0 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_1 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_1 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_2 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_2 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_3 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_3 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_4 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_4 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_5 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_5 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_6 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_6 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_7 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_base) (BYTE_AT (0x40 + offset_base) BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_7 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_base) BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_8 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_8 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_9 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_9 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_10 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_10 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_11 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_11 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_12 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_12 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_13 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_13 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_14 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_14 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_15 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x41 + offset_base) (BYTE_AT (0x41 + offset_base) BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_15 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x41 + offset_base) BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_16 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_16 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_17 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_17 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_18 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_18 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_19 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_19 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_20 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_20 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_21 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_21 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_22 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_22 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_actor_present_23 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x42 + offset_base) (BYTE_AT (0x42 + offset_base) BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_actor_present_23 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x42 + offset_base) BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_save_not_allowed STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x14 + offset_base) (BYTE_AT (0x14 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x14 + offset_base) (BYTE_AT (0x14 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_save_not_allowed STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x14 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_player1_can_die STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x14 + offset_base) (BYTE_AT (0x14 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x14 + offset_base) (BYTE_AT (0x14 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_player1_can_die STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x14 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_container_disabled STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_container_disabled STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x28 + offset_base) BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_container_locked STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_container_locked STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x28 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_door_open STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_door_open STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x28 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_door_locked STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_door_locked STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x28 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_override_script_name STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_override_script_name STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x28 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_invulnerable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x28 + offset_base) (BYTE_AT (0x28 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_invulnerable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x28 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ARE_dont_block_line_of_sight STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x29 + offset_base) (BYTE_AT (0x29 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x29 + offset_base) (BYTE_AT (0x29 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ARE_read_dont_block_line_of_sight STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x29 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                        DEFINE_PATCH_FUNCTION ARE_actor_animation STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (ANIMATE "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_LONG 0x30 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent ANIMATE entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION ARE_read_actor_animation STR_VAR arguments="" RET value BEGIN
                          READ_LONG 0x30 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value ANIMATE value_ids
                        END
                       
 
                          DEFINE_PATCH_FUNCTION CRE_name1_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x8 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_name1_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x8 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x8 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_name1_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x8 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x8 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_name1_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x8 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_name2_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0xc arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_name2_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0xc < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0xc arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_name2_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0xc > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0xc arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_name2_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0xc value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_xp_value 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x14 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_xp_valueGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x14 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x14 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_xp_valueLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x14 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x14 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_xp_value 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x14 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_xp_total 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x18 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_xp_totalGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x18 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x18 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_xp_totalLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x18 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x18 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_xp_total 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x18 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_gold 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x1c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_goldGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x1c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x1c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_goldLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x1c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x1c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_gold 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x1c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_metal 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x2c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_metalGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x2c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x2c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_metalLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x2c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x2c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_metal 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x2c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_minor 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x2d arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_minorGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x2d < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x2d arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_minorLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x2d > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x2d arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_minor 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x2d value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_major 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x2e arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_majorGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x2e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x2e arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_majorLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x2e > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x2e arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_major 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x2e value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_skin 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x2f arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_skinGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x2f < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x2f arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_skinLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x2f > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x2f arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_skin 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x2f value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_leather 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x30 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_leatherGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x30 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x30 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_leatherLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x30 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x30 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_leather 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x30 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_armor 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x31 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_armorGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x31 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x31 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_armorLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x31 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x31 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_armor 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x31 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_color_hair 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x32 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_hairGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x32 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x32 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_color_hairLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x32 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x32 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_color_hair 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x32 value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_portrait_small 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x34 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x34 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_portrait_small 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x34 value 
                            END
                            
 DEFINE_PATCH_FUNCTION CRE_portrait_large 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x3c "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x3c "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_portrait_large 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x3c value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_hide_in_shadows 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x45 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_hide_in_shadowsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x45 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x45 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_hide_in_shadowsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x45 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x45 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_hide_in_shadows 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x45 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_detect_illusions 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x64 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_detect_illusionsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x64 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x64 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_detect_illusionsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x64 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x64 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_detect_illusions 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x64 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_set_traps 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x65 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_set_trapsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x65 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x65 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_set_trapsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x65 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x65 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_set_traps 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x65 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_lore 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x66 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_loreGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x66 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x66 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_loreLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x66 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x66 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_lore 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x66 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_open_locks 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x67 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_open_locksGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x67 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x67 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_open_locksLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x67 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x67 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_open_locks 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x67 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_move_silently 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x68 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_move_silentlyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x68 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x68 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_move_silentlyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x68 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x68 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_move_silently 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x68 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_find_traps 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x69 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_find_trapsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x69 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x69 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_find_trapsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x69 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x69 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_find_traps 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x69 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_pick_pockets 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x6a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_pick_pocketsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x6a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x6a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_pick_pocketsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x6a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x6a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_pick_pockets 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x6a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_fire 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x59 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_fireGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x59 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x59 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_fireLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x59 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x59 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_fire STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x59 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_cold 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x5a arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_coldGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x5a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x5a arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_coldLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x5a > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x5a arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_cold STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x5a value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_electricity 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x5b arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_electricityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x5b < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x5b arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_electricityLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x5b > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x5b arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_electricity STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x5b value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_acid 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x5c arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_acidGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x5c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x5c arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_acidLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x5c > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x5c arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_acid STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x5c value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_magic 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x5d arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_magicGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x5d < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x5d arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_magicLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x5d > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x5d arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_magic STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x5d value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_magic_fire 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x5e arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_magic_fireGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x5e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x5e arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_magic_fireLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x5e > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x5e arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_magic_fire STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x5e value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_magic_cold 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x5f arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_magic_coldGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x5f < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x5f arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_magic_coldLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x5f > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x5f arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_magic_cold STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x5f value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_slashing 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x60 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_slashingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x60 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x60 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_slashingLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x60 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x60 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_slashing STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x60 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_crushing 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x61 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_crushingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x61 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x61 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_crushingLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x61 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x61 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_crushing STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x61 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_piercing 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x62 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_piercingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x62 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x62 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_piercingLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x62 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x62 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_piercing STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x62 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_resist_missile 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x63 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_missileGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x63 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x63 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_missileLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x63 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x63 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_missile STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x63 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_level 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x234 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_levelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x234 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x234 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_levelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x234 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x234 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_level 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x234 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_level1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x234 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_level1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x234 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x234 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_level1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x234 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x234 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_level1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x234 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_level2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x235 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_level2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x235 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x235 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_level2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x235 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x235 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_level2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x235 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_level3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x236 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_level3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x236 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x236 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_level3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x236 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x236 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_level3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x236 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_str 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x238 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_strGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x238 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x238 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_strLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x238 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x238 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_str 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x238 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_str_ex 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x239 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_str_exGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x239 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x239 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_str_exLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x239 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x239 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_str_ex 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x239 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_int 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_intGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_intLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_int 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_wis 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23b arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_wisGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23b < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23b arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_wisLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23b > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23b arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_wis 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23b value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_dex 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_dexGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_dexLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_dex 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_con 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23d arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_conGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23d < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23d arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_conLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23d > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23d arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_con 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23d value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_cha 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23e arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_chaGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23e arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_chaLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23e > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23e arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_cha 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23e value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_strength 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x238 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_strengthGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x238 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x238 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_strengthLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x238 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x238 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_strength 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x238 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_strength_ex 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x239 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_strength_exGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x239 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x239 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_strength_exLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x239 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x239 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_strength_ex 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x239 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_intelligence 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_intelligenceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_intelligenceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_intelligence 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_wisdom 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23b arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_wisdomGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23b < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23b arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_wisdomLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23b > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23b arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_wisdom 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23b value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_dexterity 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_dexterityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_dexterityLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_dexterity 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_constitution 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23d arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_constitutionGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23d < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23d arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_constitutionLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23d > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23d arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_constitution 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23d value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_charisma 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23e arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_charismaGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23e arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_charismaLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23e > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23e arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_charisma 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23e value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_sex 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x237 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_sexGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x237 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x237 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_sexLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x237 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x237 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_sex 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x237 value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_script_override 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x248 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x248 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_script_override 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x248 value 
                            END
                            
 DEFINE_PATCH_FUNCTION CRE_script_class 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x250 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x250 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_script_class 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x250 value 
                            END
                            
 DEFINE_PATCH_FUNCTION CRE_script_race 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x258 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x258 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_script_race 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x258 value 
                            END
                            
 DEFINE_PATCH_FUNCTION CRE_script_general 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x260 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x260 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_script_general 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x260 value 
                            END
                            
 DEFINE_PATCH_FUNCTION CRE_script_default 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x268 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x268 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_script_default 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x268 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_specifics 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x274 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_specificsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x274 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x274 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_specificsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x274 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x274 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_specifics 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x274 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_death 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x54 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_deathGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x54 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x54 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_deathLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x54 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x54 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_death STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x54 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_wand 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x55 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_wandGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x55 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x55 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_wandLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x55 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x55 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_wand STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x55 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_wands 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x55 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_wandsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x55 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x55 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_wandsLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x55 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x55 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_wands STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x55 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_poly 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x56 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_polyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x56 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x56 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_polyLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x56 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x56 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_poly STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x56 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_polymorph 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x56 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_polymorphGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x56 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x56 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_polymorphLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x56 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x56 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_polymorph STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x56 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_breath 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x57 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_breathGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x57 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x57 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_breathLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x57 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x57 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_breath STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x57 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_spell 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x58 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_spellGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x58 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x58 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_spellLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x58 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x58 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_spell STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x58 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_save_vs_spells 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x58 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_spellsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x58 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x58 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_save_vs_spellsLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x58 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x58 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_save_vs_spells STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x58 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_thac0 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_BYTE 0x52 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_thac0GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SBYTE_AT 0x52 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x52 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_thac0LT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SBYTE_AT 0x52 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_BYTE 0x52 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_thac0 STR_VAR arguments=~null~ RET value BEGIN READ_SBYTE 0x52 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_attacks 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x53 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_attacksGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x53 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x53 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_attacksLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x53 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x53 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_attacks 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x53 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_hp_max 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x26 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_hp_maxGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x26 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x26 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_hp_maxLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x26 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x26 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_hp_max 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x26 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_hp_current 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x24 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_hp_currentGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x24 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x24 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_hp_currentLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x24 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x24 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_hp_current 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x24 value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_dv  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII 0x280 "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE 0x280 "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_dv 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII 0x280 value (0x20) NULL   
                            END
                            
 DEFINE_PATCH_FUNCTION CRE_dialog 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x2cc "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x2cc "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_dialog 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x2cc value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_animation_code 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x28 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_animation_codeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x28 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x28 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_animation_codeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x28 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x28 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_animation_code 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x28 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_effect_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x33 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_effect_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x33 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x33 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_effect_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x33 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x33 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_effect_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x33 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_ac_natural 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_SHORT 0x46 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_naturalGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SSHORT_AT 0x46 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x46 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_naturalLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SSHORT_AT 0x46 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_SHORT 0x46 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_ac_natural STR_VAR arguments=~null~ RET value BEGIN READ_SSHORT 0x46 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_ac_effective 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_SHORT 0x48 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_effectiveGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SSHORT_AT 0x48 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x48 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_effectiveLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SSHORT_AT 0x48 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_SHORT 0x48 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_ac_effective STR_VAR arguments=~null~ RET value BEGIN READ_SSHORT 0x48 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_crushing 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_SHORT 0x4a arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_crushingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SSHORT_AT 0x4a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x4a arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_crushingLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SSHORT_AT 0x4a > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_SHORT 0x4a arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_ac_vs_crushing STR_VAR arguments=~null~ RET value BEGIN READ_SSHORT 0x4a value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_missiles 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_SHORT 0x4c arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_missilesGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SSHORT_AT 0x4c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x4c arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_missilesLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SSHORT_AT 0x4c > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_SHORT 0x4c arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_ac_vs_missiles STR_VAR arguments=~null~ RET value BEGIN READ_SSHORT 0x4c value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_piercing 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_SHORT 0x4e arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_piercingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SSHORT_AT 0x4e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x4e arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_piercingLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SSHORT_AT 0x4e > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_SHORT 0x4e arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_ac_vs_piercing STR_VAR arguments=~null~ RET value BEGIN READ_SSHORT 0x4e value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_slashing 
                                  STR_VAR arguments="" RET value 
                          BEGIN
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                            WRITE_SHORT 0x50 arguments 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_slashingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                   PATCH_IF SSHORT_AT 0x50 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x50 arguments 
                                           END 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_ac_vs_slashingLT
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                  LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                  PATCH_IF SSHORT_AT 0x50 > arguments BEGIN 
                                             PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                        WRITE_SHORT 0x50 arguments 
                                             END 
                                  END 
                                  SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_ac_vs_slashing STR_VAR arguments=~null~ RET value BEGIN READ_SSHORT 0x50 value END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_morale 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x23f arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_moraleGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x23f < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x23f arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_moraleLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x23f > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x23f arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_morale 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x23f value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_morale_break 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x240 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_morale_breakGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x240 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x240 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_morale_breakLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x240 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x240 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_morale_break 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x240 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_nightmare_mode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x7d arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_nightmare_modeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x7d < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x7d arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_nightmare_modeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x7d > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x7d arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_nightmare_mode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x7d value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_item_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_item_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_item_charges_1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_charges_1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_charges_1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_item_charges_1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_item_charges_2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_charges_2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_charges_2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_item_charges_2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xc + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_item_charges_3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xe + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_charges_3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xe + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xe + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_charges_3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xe + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xe + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_item_charges_3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xe + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_spell_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_spell_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_opcode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_opcodeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_opcodeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_opcode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x28 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x28 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x28 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_target 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_targetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_targetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_target 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0xc + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_effect_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x28 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x28 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_effect_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x28 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_timing 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x1c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_timingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x1c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x1c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_timingLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x1c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x1c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_timing 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x1c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_probability1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_probability1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_probability1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_probability1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_probability2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_probability2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x26 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x26 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_probability2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x26 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_probability2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x26 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_duration 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_durationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_durationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_duration 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_parameter1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x14 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parameter1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x14 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x14 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parameter1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x14 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x14 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_parameter1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x14 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_parameter2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x18 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parameter2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x18 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x18 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parameter2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x18 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x18 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_parameter2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x18 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_item_slot 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_slotGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_item_slotLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_item_slot 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x0 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_memorized_spell 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_memorized_spell 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_resist_dispel 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x54 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_dispelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x54 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x54 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_resist_dispelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x54 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x54 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_resist_dispel 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x54 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_memorization_level 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_memorization_levelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_memorization_levelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_memorization_level 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_number_can_memorize 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_number_can_memorizeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_number_can_memorizeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_number_can_memorize 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_number_has_memorized 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x4 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_number_has_memorizedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x4 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x4 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_number_has_memorizedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x4 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x4 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_number_has_memorized 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x4 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_memorization_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x6 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_memorization_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x6 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x6 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_memorization_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x6 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x6 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_memorization_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x6 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_parent_resource_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x88 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parent_resource_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x88 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x88 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parent_resource_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x88 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x88 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_parent_resource_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x88 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION CRE_parent_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x8c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x8c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION CRE_read_parent_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x8c + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION CRE_parent_item_slot 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x9c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parent_item_slotGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x9c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x9c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_parent_item_slotLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x9c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x9c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_parent_item_slot 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x9c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_mode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x40 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_modeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x40 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x40 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_modeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x40 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x40 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_mode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x40 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION CRE_power 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x18 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_powerGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x18 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x18 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_powerLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x18 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x18 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION CRE_read_power 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x18 + offset_base) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION CRE_no_corpse STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_no_corpse STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_permanent_corpse STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_permanent_corpse STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_original_class_fighter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_original_class_fighter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_original_class_mage STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_original_class_mage STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_original_class_cleric STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_original_class_cleric STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_original_class_thief STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_original_class_thief STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_original_class_druid STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x10 (BYTE_AT 0x10 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_original_class_druid STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x10 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_original_class_ranger STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x11 (BYTE_AT 0x11 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x11 (BYTE_AT 0x11 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_original_class_ranger STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x11 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_ignore_nightmare_mode STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x12 (BYTE_AT 0x12 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x12 (BYTE_AT 0x12 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_ignore_nightmare_mode STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x12 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_sleeping STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_sleeping STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_berserk STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_berserk STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_panic STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_panic STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_stunned STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_stunned STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_invisible STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_invisible STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_helpless STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_helpless STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_frozen_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_frozen_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_stone_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_stone_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_exploding_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_exploding_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_flame_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_flame_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_acid_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_acid_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_dead STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_dead STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_silenced STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_silenced STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_charmed STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_charmed STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_poisoned STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_poisoned STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_hasted STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_hasted STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_slowed STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_slowed STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_infravision STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_infravision STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_blind STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_blind STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_diseased STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_diseased STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_feebleminded STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_feebleminded STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_nondetection STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_nondetection STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_improved_invisibility STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_improved_invisibility STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_bless STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_bless STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_chant STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_chant STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_drawuponholymight STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_drawuponholymight STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_luck STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_luck STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_aid STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_aid STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_chantbad STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_chantbad STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_blur STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_blur STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_mirrorimage STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_mirrorimage STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_confused STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x23 (BYTE_AT 0x23 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_confused STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x23 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_state_hidden STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x22 (BYTE_AT 0x22 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_state_hidden STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x22 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_unstealable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_unstealable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION CRE_undroppable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION CRE_read_undroppable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_animation STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (ANIMATE "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_SHORT 0x28 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent ANIMATE entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_animation STR_VAR arguments="" RET value BEGIN
                          READ_SHORT 0x28 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value ANIMATE value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_allegiance STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (EA "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x270 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent EA entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_allegiance STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x270 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value EA value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_general STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (general "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x271 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent general entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_general STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x271 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value general value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_race STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (race "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x272 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent race entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_race STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x272 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value race value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_class STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (class "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x273 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent class entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_class STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x273 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value class value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_gender STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (gender "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x275 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent gender entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_gender STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x275 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value gender value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_alignment STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (align "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x27b ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent align entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_alignment STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x27b value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value align value_ids
                        END
                       
 
                        DEFINE_PATCH_FUNCTION CRE_kit_vanilla STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (kit "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               LPF reverse_long INT_VAR input=ids_value RET ids_value=output END
                               WRITE_LONG 0x244 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent kit entry %arguments%"
                          END
                          SET value=1
                         END
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_kit_vanilla STR_VAR arguments="" RET value BEGIN
                          READ_LONG 0x244 value_ids
                          LPF reverse_long INT_VAR input=value_ids RET value_ids=output END
                          LOOKUP_IDS_SYMBOL_OF_INT value kit value_ids
                        END
              
 
                        DEFINE_PATCH_FUNCTION CRE_kit STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (dw#kit "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               LPF reverse_long INT_VAR input=ids_value RET ids_value=output END
                               WRITE_LONG 0x244 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent dw#kit entry %arguments%"
                          END
                          SET value=1
                         END
                        END
                        DEFINE_PATCH_FUNCTION CRE_read_kit STR_VAR arguments="" RET value BEGIN
                          READ_LONG 0x244 value_ids
                          LPF reverse_long INT_VAR input=value_ids RET value_ids=output END
                          LOOKUP_IDS_SYMBOL_OF_INT value dw#kit value_ids
                        END
              
 
                          DEFINE_PATCH_FUNCTION DLG_response_text 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x04 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION DLG_response_textGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x04 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x04 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION DLG_response_textLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x04 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x04 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION DLG_read_response_text 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x04 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION DLG_journal_text 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x08 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION DLG_journal_textGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x08 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x08 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION DLG_journal_textLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x08 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x08 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION DLG_read_journal_text 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x08 + offset_secondary) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION DLG_associated_text STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_associated_text STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x00 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION DLG_associated_trigger STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_associated_trigger STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x00 + offset_secondary) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION DLG_associated_action STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_associated_action STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x00 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION DLG_terminates_dialog STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_terminates_dialog STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x00 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION DLG_journal_entry STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_journal_entry STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x00 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION DLG_add_unsolved_quest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x00 + offset_secondary) (BYTE_AT (0x00 + offset_secondary) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_add_unsolved_quest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x00 + offset_secondary) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION DLG_add_solved_quest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x01 + offset_secondary) (BYTE_AT (0x01 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x01 + offset_secondary) (BYTE_AT (0x01 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION DLG_read_add_solved_quest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x01 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                          DEFINE_PATCH_FUNCTION EFF_opcode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x10 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_opcodeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x10 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x10 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_opcodeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x10 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x10 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_opcode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x10 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_target 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x14 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_targetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x14 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x14 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_targetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x14 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x14 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_target 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x14 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_power 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x18 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_powerGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x18 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x18 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_powerLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x18 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x18 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_power 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x18 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_parameter1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x1c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x1c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x1c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x1c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x1c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_parameter1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x1c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_parameter2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x20 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x20 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x20 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x20 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x20 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_parameter2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x20 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_parameter2a 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x20 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter2aGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x20 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x20 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter2aLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x20 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x20 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_parameter2a 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x20 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_parameter2b 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x22 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter2bGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x22 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x22 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter2bLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x22 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x22 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_parameter2b 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x22 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_timing 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x24 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_timingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x24 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x24 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_timingLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x24 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x24 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_timing 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x24 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_duration 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x28 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_durationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x28 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x28 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_durationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x28 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x28 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_duration 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x28 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_probability1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x2c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_probability1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x2c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x2c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_probability1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x2c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x2c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_probability1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x2c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_probability2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x2e arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_probability2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x2e < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x2e arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_probability2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x2e > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x2e arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_probability2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x2e value 
                          END
                          
 DEFINE_PATCH_FUNCTION EFF_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x30 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x30 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION EFF_read_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x30 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION EFF_dicenum 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x38 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_dicenumGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x38 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x38 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_dicenumLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x38 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x38 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_dicenum 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x38 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_dicesize 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x3c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_dicesizeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x3c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x3c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_dicesizeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x3c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x3c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_dicesize 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x3c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_savebonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x44 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_savebonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x44 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x44 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_savebonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x44 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x44 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_savebonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x44 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_resistance 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x5c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_resistanceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x5c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x5c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_resistanceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x5c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x5c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_resistance 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x5c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_resist_dispel 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x5c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_resist_dispelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x5c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x5c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_resist_dispelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x5c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x5c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_resist_dispel 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x5c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_parameter3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x60 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x60 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x60 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x60 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x60 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_parameter3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x60 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_parameter4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x64 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x64 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x64 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_parameter4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x64 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x64 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_parameter4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x64 value 
                          END
                          
 DEFINE_PATCH_FUNCTION EFF_vvc 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x70 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x70 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION EFF_read_vvc 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x70 value 
                            END
                            
 DEFINE_PATCH_FUNCTION EFF_resource2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x70 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x70 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION EFF_read_resource2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x70 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION EFF_caster_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x80 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_caster_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x80 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x80 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_caster_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x80 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x80 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_caster_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x80 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_caster_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x84 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_caster_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x84 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x84 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_caster_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x84 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x84 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_caster_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x84 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_target_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x88 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_target_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x88 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x88 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_target_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x88 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x88 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_target_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x88 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION EFF_target_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x8c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_target_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x8c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x8c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_target_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x8c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x8c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION EFF_read_target_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x8c value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION EFF_save_vs_spell STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_vs_spell STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_spells STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_spells STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_vs_breath STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_vs_breath STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_breath STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_breath STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_vs_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_vs_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_vs_wand STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_vs_wand STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_wands STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_wands STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_vs_polymorph STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_vs_polymorph STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_save_polymorph STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_save_polymorph STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_bypass_mirror_image STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x43 (BYTE_AT 0x43 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x43 (BYTE_AT 0x43 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_bypass_mirror_image STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x43 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION EFF_fist_only STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x48 (BYTE_AT 0x48 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION EFF_read_fist_only STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x48 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                          DEFINE_PATCH_FUNCTION ITM_name1_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x8 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_name1_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x8 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x8 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_name1_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x8 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x8 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_name1_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x8 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_name2_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0xc arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_name2_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0xc < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0xc arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_name2_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0xc > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0xc arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_name2_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0xc value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_enchantment 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x60 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_enchantmentGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x60 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x60 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_enchantmentLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x60 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x60 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_enchantment 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x60 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_category 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x1c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_categoryGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x1c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x1c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_categoryLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x1c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x1c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_category 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x1c value 
                          END
                          
 DEFINE_PATCH_FUNCTION ITM_inventory 
                                          STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        WRITE_ASCIIE 0x22 "%arguments%" (0x2) 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_inventory 
                                          STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x22 value (0x2) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ITM_price 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x34 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_priceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x34 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x34 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_priceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x34 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x34 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_price 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x34 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_max_in_stack 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x38 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_max_in_stackGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x38 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x38 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_max_in_stackLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x38 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x38 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_max_in_stack 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x38 value 
                          END
                          
 DEFINE_PATCH_FUNCTION ITM_icon 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x3a "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x3a "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_icon 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x3a value 
                            END
                            
 DEFINE_PATCH_FUNCTION ITM_icon_ground 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x44 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x44 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_icon_ground 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x44 value 
                            END
                            
 DEFINE_PATCH_FUNCTION ITM_icon_carried 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x58 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x58 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_icon_carried 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x58 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ITM_minimum_strength 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x26 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_minimum_strengthGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x26 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x26 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_minimum_strengthLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x26 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x26 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_minimum_strength 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x26 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_lore 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x42 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_loreGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x42 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x42 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_loreLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x42 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x42 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_lore 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x42 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_weight 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x4c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_weightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x4c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x4c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_weightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x4c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x4c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_weight 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x4c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_description1_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x50 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_description1_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x50 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x50 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_description1_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x50 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x50 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_description1_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x50 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_description2_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x54 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_description2_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x54 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x54 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_description2_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x54 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x54 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_description2_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x54 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_num_abils 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x68 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_num_abilsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x68 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x68 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_num_abilsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x68 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x68 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_num_abils 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x68 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_proficiency_code 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x31 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_proficiency_codeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x31 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x31 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_proficiency_codeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x31 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x31 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_proficiency_code 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x31 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_icon_loc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x2 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_icon_locGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x2 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x2 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_icon_locLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x2 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x2 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_icon_loc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x2 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ITM_ability_icon 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x4 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x4 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_ability_icon 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x4 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ITM_ability_target 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_targetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_targetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_target 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xc + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_target_count 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xd + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_target_countGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xd + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xd + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_target_countLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xd + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xd + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_target_count 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xd + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_range 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xe + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_rangeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xe + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xe + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_rangeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xe + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xe + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_range 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xe + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_launcher_required 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x10 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_launcher_requiredGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x10 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x10 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_launcher_requiredLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x10 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x10 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_launcher_required 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x10 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_speed 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x12 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_speedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x12 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x12 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_speedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x12 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x12 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_speed 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x12 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_to_hit 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x14 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_to_hitGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x14 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x14 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_to_hitLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x14 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x14 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_to_hit 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x14 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_dicesize 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x16 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_dicesizeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x16 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x16 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_dicesizeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x16 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x16 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_dicesize 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x16 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_school 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x17 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_schoolGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x17 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x17 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_schoolLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x17 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x17 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_school 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x17 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_secondary 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x19 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_secondaryGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x19 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x19 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_secondaryLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x19 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x19 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_secondary 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x19 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_numdice 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x18 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_numdiceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x18 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x18 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_numdiceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x18 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x18 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_numdice 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x18 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_ability_dicenum 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x18 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_dicenumGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x18 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x18 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_ability_dicenumLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x18 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x18 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_ability_dicenum 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x18 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_damage_bonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x1a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_damage_bonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x1a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x1a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_damage_bonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x1a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x1a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_damage_bonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x1a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_damage_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x1c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_damage_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x1c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x1c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_damage_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x1c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x1c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_damage_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x1c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_effect_num 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x1e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_effect_numGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x1e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x1e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_effect_numLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x1e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x1e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_effect_num 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x1e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_effect_offset 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_effect_offsetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x20 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x20 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_effect_offsetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x20 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x20 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_effect_offset 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x20 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_number_charges 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_number_chargesGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_number_chargesLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_number_charges 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_when_drained 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_when_drainedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_when_drainedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_when_drained 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_strength_bonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x26 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_strength_bonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x26 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x26 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_strength_bonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x26 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x26 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_strength_bonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x26 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_projectile 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2a + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_projectileGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2a + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2a + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_projectileLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2a + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2a + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_projectile 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2a + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_overhand 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_overhandGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_overhandLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_overhand 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_backhand 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_backhandGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_backhandLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_backhand 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_thrust 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x30 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_thrustGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x30 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x30 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_thrustLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x30 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x30 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_thrust 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x30 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_is_arrow 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x32 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_is_arrowGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x32 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x32 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_is_arrowLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x32 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x32 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_is_arrow 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x32 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_is_bolt 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x34 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_is_boltGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x34 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x34 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_is_boltLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x34 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x34 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_is_bolt 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x34 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_is_missile 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x36 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_is_missileGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x36 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x36 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_is_missileLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x36 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x36 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_is_missile 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x36 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_opcode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_opcodeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_opcodeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_opcode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_target 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x2 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_targetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x2 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x2 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_targetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x2 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x2 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_target 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x2 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_power 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x3 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_powerGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x3 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x3 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_powerLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x3 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x3 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_power 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x3 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_parameter1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x4 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x4 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x4 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x4 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x4 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_parameter1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x4 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_parameter2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_parameter2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_parameter2a 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x8 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter2aGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x8 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x8 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter2aLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x8 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x8 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_parameter2a 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x8 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_parameter2b 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter2bGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter2bLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_parameter2b 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_timing 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xc + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_timingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xc + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xc + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_timingLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xc + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xc + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_timing 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xc + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_duration 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0xe + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_durationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0xe + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0xe + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_durationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0xe + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0xe + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_duration 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0xe + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_probability1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x12 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_probability1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x12 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x12 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_probability1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x12 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x12 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_probability1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x12 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_probability2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x13 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_probability2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x13 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x13 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_probability2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x13 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x13 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_probability2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x13 + offset_secondary) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ITM_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x14 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x14 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x14 + offset_secondary) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ITM_dicenum 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x1c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_dicenumGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x1c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x1c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_dicenumLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x1c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x1c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_dicenum 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x1c + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_dicesize 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x20 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_dicesizeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x20 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x20 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_dicesizeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x20 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x20 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_dicesize 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x20 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_savebonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x44 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_savebonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x44 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x44 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_savebonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x44 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x44 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_savebonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x44 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_resistance 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x5c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_resistanceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x5c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x5c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_resistanceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x5c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x5c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_resistance 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x5c + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_resist_dispel 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_resist_dispelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xd + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xd + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_resist_dispelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xd + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_resist_dispel 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xd + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_parameter3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x60 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x60 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x60 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x60 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x60 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_parameter3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x60 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_parameter4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x64 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x64 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x64 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_parameter4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x64 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x64 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_parameter4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x64 + offset_secondary) value 
                          END
                          
 DEFINE_PATCH_FUNCTION ITM_vvc 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_vvc 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_secondary) value 
                            END
                            
 DEFINE_PATCH_FUNCTION ITM_resource2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION ITM_read_resource2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_secondary) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION ITM_caster_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x80 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_caster_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x80 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x80 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_caster_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x80 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x80 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_caster_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x80 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_caster_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x84 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_caster_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x84 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x84 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_caster_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x84 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x84 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_caster_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x84 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_target_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x88 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_target_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x88 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x88 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_target_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x88 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x88 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_target_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x88 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_target_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_target_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_target_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_target_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8c + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_dispel 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_dispelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xd + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xd + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_dispelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xd + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_dispel 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xd + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_save_bonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x28 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_save_bonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x28 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x28 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_save_bonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x28 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x28 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_save_bonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x28 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION ITM_mode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x2c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_modeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x2c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x2c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_modeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x2c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x2c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION ITM_read_mode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x2c + offset_secondary) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION ITM_unsellable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unsellable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_twohanded STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_twohanded STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_droppable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_droppable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_displayable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_displayable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_cursed STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_cursed STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_not_copyable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_not_copyable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_magical STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_magical STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_bow STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_bow STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_silver STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_silver STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_cold_iron STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_cold_iron STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_stolen STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_stolen STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_conversable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_conversable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_forbid_offhand STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_forbid_offhand STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_chaotic STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_chaotic STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_evil STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_evil STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_good STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_good STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_GEneutral STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_GEneutral STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_lawful STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_lawful STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_LCneutral STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_LCneutral STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_chaotic_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_chaotic_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_evil_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_evil_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_good_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_good_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_GEneutral_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_GEneutral_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_lawful_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_lawful_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_LCneutral_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_LCneutral_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_bard STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_bard STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric_mage STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric_mage STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric_thief STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric_thief STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric_ranger STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric_ranger STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter_druid STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter_druid STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter_mage STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter_mage STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter_cleric STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter_cleric STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter_mage_cleric STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter_mage_cleric STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter_mage_thief STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter_mage_thief STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_fighter_thief STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_fighter_thief STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_mage STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_mage STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_mage_thief STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_mage_thief STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_paladin STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_paladin STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_ranger STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_ranger STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_thief STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_thief STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_elf STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_elf STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_dwarf STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_dwarf STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_half_elf STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_half_elf STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_halfling STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_halfling STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_human STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_human STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_gnome STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_gnome STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_monk STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_monk STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_druid STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_druid STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_half_orc STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_half_orc STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric_of_talos STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric_of_talos STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric_of_helm STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric_of_helm STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cleric_of_lathander STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cleric_of_lathander STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_totemic_druid STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_totemic_druid STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_shapeshifter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_shapeshifter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_avenger STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_avenger STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_barbarian STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_barbarian STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_wild_mage STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x29 (BYTE_AT 0x29 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_wild_mage STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x29 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_stalker STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_stalker STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_beastmaster STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_beastmaster STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_assassin STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_assassin STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_bounty_hunter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_bounty_hunter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_swashbuckler STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_swashbuckler STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_blade STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_blade STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_jester STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_jester STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_skald STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2b (BYTE_AT 0x2b BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_skald STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2b BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_diviner STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_diviner STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_enchanter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_enchanter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_illusionist STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_illusionist STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_invoker STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_invoker STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_necromancer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_necromancer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_transmuter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_transmuter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_no_kit STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_no_kit STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_archer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2d (BYTE_AT 0x2d BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_archer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2d BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_berserker STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_berserker STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_wizard_slayer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_wizard_slayer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_kensai STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_kensai STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_cavalier STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_cavalier STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_inquisitor STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_inquisitor STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_undead_hunter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_undead_hunter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_abjurer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_abjurer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_unusable_conjurer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x2f (BYTE_AT 0x2f BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_unusable_conjurer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x2f BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_add_strength_bonus STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_add_strength_bonus STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x26 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_breakable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_breakable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x26 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_damage_only STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_damage_only STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x26 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_to_hit_only STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x26 + offset_base) (BYTE_AT (0x26 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_to_hit_only STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x26 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_breaks_sanctuary STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x27 + offset_base) (BYTE_AT (0x27 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x27 + offset_base) (BYTE_AT (0x27 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_breaks_sanctuary STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x27 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_hostile STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x27 + offset_base) (BYTE_AT (0x27 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x27 + offset_base) (BYTE_AT (0x27 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_hostile STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x27 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_recharges_on_rest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x27 + offset_base) (BYTE_AT (0x27 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x27 + offset_base) (BYTE_AT (0x27 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_recharges_on_rest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x27 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_spell STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_spell STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_spells STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_spells STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_breath STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_breath STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_breath STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_breath STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_wand STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_wand STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_wands STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_wands STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_polymorph STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_polymorph STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_polymorph STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_polymorph STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_bypass_mirror_image STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x27 + offset_secondary) (BYTE_AT (0x27 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x27 + offset_secondary) (BYTE_AT (0x27 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_bypass_mirror_image STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x27 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_fist_only STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x48 + offset_secondary) (BYTE_AT (0x48 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x48 + offset_secondary) (BYTE_AT (0x48 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_fist_only STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x48 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_poison STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_poison STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_wands STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_wands STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION ITM_save_vs_petrification STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION ITM_read_save_vs_petrification STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                        DEFINE_PATCH_FUNCTION ITM_proficiency STR_VAR arguments="" RET value BEGIN
                         
                         PATCH_IF "%arguments%" STRING_COMPARE_CASE "no_change" BEGIN
                          SET ids_value = IDS_OF_SYMBOL (STATS "%arguments%")
                          PATCH_IF ids_value>0 BEGIN
                               WRITE_BYTE 0x31 ids_value
                          END ELSE BEGIN
                               PATCH_FAIL "Tried to set nonexistent STATS entry %arguments%"
                          END
                          SET value=1
                         END 
                        END
                        DEFINE_PATCH_FUNCTION ITM_read_proficiency STR_VAR arguments="" RET value BEGIN
                          READ_BYTE 0x31 value_ids
                          LOOKUP_IDS_SYMBOL_OF_INT value STATS value_ids
                        END
                       
 
                          DEFINE_PATCH_FUNCTION PRO_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x8 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x8 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x8 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x8 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x8 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x8 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_speed 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0xa arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_speedGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0xa < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0xa arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_speedLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0xa > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0xa arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_speed 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0xa value 
                          END
                          
 DEFINE_PATCH_FUNCTION PRO_travel_wav 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x10 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x10 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_travel_wav 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x10 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_arrive_wav 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x18 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x18 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_arrive_wav 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x18 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_travel_wav0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x10 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x10 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_travel_wav0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x10 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_arrive_wav0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x18 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x18 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_arrive_wav0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x18 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_travel_vvc 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x20 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x20 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_travel_vvc 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x20 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION PRO_spark_color_num 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x28 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_spark_color_numGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x28 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x28 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_spark_color_numLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x28 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x28 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_spark_color_num 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x28 value 
                          END
                          
 DEFINE_PATCH_FUNCTION PRO_travel_anim 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x104 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x104 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_travel_anim 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x104 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_shadow_anim 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x10c "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x10c "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_shadow_anim 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x10c value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_travel_anim0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x104 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x104 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_travel_anim0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x104 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_shadow_anim0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x10c "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x10c "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_shadow_anim0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x10c value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION PRO_pro_seq_num 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x114 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_pro_seq_numGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x114 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x114 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_pro_seq_numLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x114 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x114 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_pro_seq_num 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x114 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_shadow_seq_num 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x115 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_shadow_seq_numGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x115 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x115 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_shadow_seq_numLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x115 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x115 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_shadow_seq_num 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x115 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_light_intensity 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x116 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_light_intensityGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x116 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x116 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_light_intensityLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x116 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x116 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_light_intensity 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x116 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_light_width 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x118 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_light_widthGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x118 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x118 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_light_widthLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x118 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x118 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_light_width 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x118 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_light_height 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x11a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_light_heightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x11a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x11a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_light_heightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x11a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x11a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_light_height 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x11a value 
                          END
                          
 DEFINE_PATCH_FUNCTION PRO_palette 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x11c "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x11c "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_palette 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x11c value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION PRO_color_1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x124 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x124 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x124 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x124 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x124 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x124 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_color_2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x125 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x125 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x125 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x125 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x125 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x125 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_color_3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x126 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x126 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x126 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x126 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x126 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x126 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_color_4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x127 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x127 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x127 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x127 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x127 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x127 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_color_5 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x128 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_5GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x128 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x128 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_5LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x128 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x128 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_5 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x128 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_color_6 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x129 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_6GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x129 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x129 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_6LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x129 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x129 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_6 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x129 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_color_7 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x12a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_7GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x12a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x12a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_color_7LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x12a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x12a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_color_7 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x12a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x124 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x124 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x124 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x124 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x124 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x124 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x125 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x125 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x125 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x125 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x125 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x125 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x126 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x126 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x126 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x126 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x126 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x126 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x127 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x127 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x127 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x127 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x127 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x127 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_5 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x128 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_5GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x128 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x128 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_5LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x128 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x128 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_5 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x128 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_6 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x129 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_6GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x129 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x129 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_6LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x129 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x129 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_6 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x129 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_7 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x12a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_7GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x12a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x12a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_color_7LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x12a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x12a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_color_7 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x12a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_facing 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x133 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_facingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x133 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x133 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_facingLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x133 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x133 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_facing 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x133 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_smoke_anim 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x134 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_animGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x134 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x134 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_smoke_animLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x134 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x134 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_smoke_anim 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x134 value 
                          END
                          
 DEFINE_PATCH_FUNCTION PRO_trail_anim_1 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x136 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x136 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_anim_1 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x136 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_anim_2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x13e "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x13e "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_anim_2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x13e value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_anim_3 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x146 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x146 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_anim_3 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x146 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_anim_10 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x136 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x136 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_anim_10 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x136 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_anim_20 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x13e "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x13e "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_anim_20 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x13e value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_anim_30 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x146 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x146 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_anim_30 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x146 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_1_seq_num 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x14e "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x14e "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_1_seq_num 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x14e value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_2_seq_num 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x150 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x150 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_2_seq_num 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x150 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trail_3_seq_num 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x152 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x152 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trail_3_seq_num 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x152 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION PRO_trigger_radius 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x204 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_trigger_radiusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x204 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x204 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_trigger_radiusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x204 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x204 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_trigger_radius 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x204 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_basic_aoe_radius 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x206 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_basic_aoe_radiusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x206 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x206 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_basic_aoe_radiusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x206 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x206 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_basic_aoe_radius 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x206 value 
                          END
                          
 DEFINE_PATCH_FUNCTION PRO_trigger_wav 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x208 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x208 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trigger_wav 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x208 value 
                            END
                            
 DEFINE_PATCH_FUNCTION PRO_trigger_wav0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x208 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x208 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_trigger_wav0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x208 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION PRO_explosion_frequency 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x210 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_frequencyGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x210 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x210 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_frequencyLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x210 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x210 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_explosion_frequency 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x210 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_fragment_anim 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x212 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_fragment_animGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x212 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x212 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_fragment_animLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x212 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x212 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_fragment_anim 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x212 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_secondary_pro 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x214 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_secondary_proGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x214 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x214 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_secondary_proLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x214 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x214 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_secondary_pro 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x214 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_repetitions 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x216 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_repetitionsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x216 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x216 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_repetitionsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x216 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x216 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_repetitions 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x216 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_explosion_anim 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x217 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_animGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x217 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x217 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_animLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x217 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x217 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_explosion_anim 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x217 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_explosion_color 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x218 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_colorGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x218 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x218 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_colorLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x218 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x218 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_explosion_color 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x218 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_target_anim 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x21a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_target_animGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x21a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x21a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_target_animLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x21a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x21a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_target_anim 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x21a value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION PRO_explosion_pro 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x21a arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_proGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x21a < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x21a arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_explosion_proLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x21a > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x21a arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_explosion_pro 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x21a value 
                          END
                          
 DEFINE_PATCH_FUNCTION PRO_explosion_anim_vvc 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x21c "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x21c "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION PRO_read_explosion_anim_vvc 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x21c value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION PRO_cone_angle 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x224 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_cone_angleGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x224 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x224 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_cone_angleLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x224 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x224 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION PRO_read_cone_angle 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x224 value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION PRO_show_sparkle STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_show_sparkle STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0xc BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_sparkle_z_coord STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_sparkle_z_coord STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0xc BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_loop_travel_sound STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_loop_travel_sound STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0xc BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_loop_arrive_sound STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_loop_arrive_sound STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0xc BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_sparkle_no_direct_target STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_sparkle_no_direct_target STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0xc BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_draw_below STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0xc (BYTE_AT 0xc BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_draw_below STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0xc BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_use_palette STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_use_palette STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_enable_smoke STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_enable_smoke STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_use_area_lighting STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_use_area_lighting STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_use_area_height STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_use_area_height STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_enable_shadow STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_enable_shadow STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_enable_light_spot STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_enable_light_spot STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_enable_brighten STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x100 (BYTE_AT 0x100 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_enable_brighten STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x100 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_low_brighten STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x101 (BYTE_AT 0x101 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x101 (BYTE_AT 0x101 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_low_brighten STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x101 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_high_brighten STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x101 (BYTE_AT 0x101 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x101 (BYTE_AT 0x101 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_high_brighten STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x101 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_keep_pro_visible STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_keep_pro_visible STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_triggered_by_inanimate STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_triggered_by_inanimate STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_triggered_on_condition STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_triggered_on_condition STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_trigger_in_delay STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_trigger_in_delay STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_use_secondary STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_use_secondary STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_use_fragment STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_use_fragment STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_target_flag_1 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_target_flag_1 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_target_flag_2 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x200 (BYTE_AT 0x200 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_target_flag_2 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x200 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_num_is_mage_level STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_num_is_mage_level STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_num_is_priest_level STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_num_is_priest_level STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_use_vvc STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_use_vvc STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_is_cone STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_is_cone STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_go_through_walls STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_go_through_walls STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_delay_explosion STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_delay_explosion STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION PRO_only_one_target STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x201 (BYTE_AT 0x201 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION PRO_read_only_one_target STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x201 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                          DEFINE_PATCH_FUNCTION SPL_name1_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x8 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_name1_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x8 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x8 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_name1_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x8 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x8 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_name1_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x8 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_name2_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0xc arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_name2_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0xc < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0xc arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_name2_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0xc > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0xc arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_name2_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0xc value 
                          END
                          
 DEFINE_PATCH_FUNCTION SPL_casting_sound 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x10 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x10 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION SPL_read_casting_sound 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x10 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION SPL_flags 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x18 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_flagsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x18 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x18 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_flagsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x18 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x18 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_flags 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x18 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_spell_type_num 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x1c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_spell_type_numGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x1c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x1c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_spell_type_numLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x1c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x1c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_spell_type_num 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x1c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_priest_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x20 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_priest_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x20 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x20 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_priest_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x20 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x20 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_priest_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x20 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_casting_animation 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x22 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_casting_animationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x22 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x22 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_casting_animationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x22 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x22 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_casting_animation 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x22 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_primary 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x25 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_primaryGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x25 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x25 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_primaryLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x25 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x25 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_primary 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x25 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_school_code 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x25 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_school_codeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x25 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x25 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_school_codeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x25 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x25 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_school_code 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x25 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_secondary 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x27 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_secondaryGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x27 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x27 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_secondaryLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x27 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x27 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_secondary 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x27 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_level 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x34 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_levelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x34 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x34 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_levelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x34 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x34 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_level 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x34 value 
                          END
                          
 DEFINE_PATCH_FUNCTION SPL_icon 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x3a "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x3a "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION SPL_read_icon 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x3a value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION SPL_description1_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x50 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_description1_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x50 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x50 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_description1_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x50 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x50 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_description1_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x50 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_description2_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x54 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_description2_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x54 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x54 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_description2_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x54 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x54 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_description2_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x54 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_num_abils 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x68 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_num_abilsGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x68 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x68 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_num_abilsLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x68 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x68 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_num_abils 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x68 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_icon_loc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x2 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_icon_locGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x2 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x2 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_icon_locLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x2 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x2 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_icon_loc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x2 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION SPL_ability_icon 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x4 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x4 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION SPL_read_ability_icon 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x4 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION SPL_ability_range 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xe + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_rangeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xe + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xe + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_rangeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xe + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xe + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_range 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xe + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_target 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_targetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_targetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_target 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xc + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_min_level 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x10 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_min_levelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x10 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x10 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_min_levelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x10 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x10 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_min_level 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x10 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_damage_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x1c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_damage_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x1c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x1c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_damage_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x1c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x1c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_damage_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x1c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_dicesize 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x16 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_dicesizeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x16 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x16 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_dicesizeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x16 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x16 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_dicesize 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x16 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_charges 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_chargesGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x22 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x22 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_chargesLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x22 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x22 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_charges 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x22 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_ability_unknown_late 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_unknown_lateGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_ability_unknown_lateLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_ability_unknown_late 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x24 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_projectile 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_projectileGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x26 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x26 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_projectileLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x26 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x26 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_projectile 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x26 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_effect_number 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x1e + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_effect_numberGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x1e + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x1e + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_effect_numberLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x1e + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x1e + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_effect_number 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x1e + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_casting_time 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x12 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_casting_timeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x12 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x12 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_casting_timeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x12 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x12 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_casting_time 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x12 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_opcode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_opcodeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_opcodeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_opcode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_target 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x2 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_targetGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x2 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x2 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_targetLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x2 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x2 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_target 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x2 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_power 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x3 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_powerGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x3 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x3 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_powerLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x3 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x3 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_power 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x3 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_parameter1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x4 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x4 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x4 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x4 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x4 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_parameter1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x4 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_parameter2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_parameter2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_parameter2a 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0x8 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter2aGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0x8 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0x8 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter2aLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0x8 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0x8 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_parameter2a 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0x8 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_parameter2b 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter2bGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter2bLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_parameter2b 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_timing 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xc + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_timingGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xc + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xc + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_timingLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xc + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xc + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_timing 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xc + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_duration 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0xe + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_durationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0xe + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0xe + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_durationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0xe + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0xe + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_duration 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0xe + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_probability1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x12 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_probability1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x12 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x12 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_probability1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x12 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x12 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_probability1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x12 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_probability2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0x13 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_probability2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0x13 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0x13 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_probability2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0x13 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0x13 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_probability2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0x13 + offset_secondary) value 
                          END
                          
 DEFINE_PATCH_FUNCTION SPL_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x14 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x14 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION SPL_read_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x14 + offset_secondary) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION SPL_dicenum 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x1c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_dicenumGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x1c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x1c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_dicenumLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x1c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x1c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_dicenum 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x1c + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_dicesize 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x20 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_dicesizeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x20 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x20 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_dicesizeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x20 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x20 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_dicesize 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x20 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_savebonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x28 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_savebonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x28 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x28 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_savebonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x28 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x28 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_savebonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x28 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_resistance 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x5c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_resistanceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x5c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x5c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_resistanceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x5c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x5c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_resistance 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x5c + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_resist_dispel 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_resist_dispelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xd + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xd + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_resist_dispelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xd + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_resist_dispel 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xd + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_parameter3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x60 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x60 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x60 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x60 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x60 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_parameter3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x60 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_parameter4 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x64 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter4GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x64 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x64 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_parameter4LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x64 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x64 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_parameter4 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x64 + offset_secondary) value 
                          END
                          
 DEFINE_PATCH_FUNCTION SPL_vvc 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION SPL_read_vvc 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_secondary) value 
                            END
                            
 DEFINE_PATCH_FUNCTION SPL_resource2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x70 + offset_secondary) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x70 + offset_secondary) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION SPL_read_resource2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x70 + offset_secondary) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION SPL_caster_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x80 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_caster_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x80 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x80 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_caster_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x80 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x80 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_caster_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x80 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_caster_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x84 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_caster_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x84 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x84 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_caster_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x84 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x84 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_caster_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x84 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_target_xloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x88 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_target_xlocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x88 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x88 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_target_xlocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x88 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x88 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_target_xloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x88 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_target_yloc 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_target_ylocGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_target_ylocLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_target_yloc 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8c + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_dispel 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_dispelGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT (0xd + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE (0xd + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_dispelLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT (0xd + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE (0xd + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_dispel 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE (0xd + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_save_bonus 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x28 + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_save_bonusGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x28 + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x28 + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_save_bonusLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x28 + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x28 + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_save_bonus 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x28 + offset_secondary) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION SPL_mode 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x2c + offset_secondary) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_modeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x2c + offset_secondary) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x2c + offset_secondary) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_modeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x2c + offset_secondary) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x2c + offset_secondary) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION SPL_read_mode 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x2c + offset_secondary) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION SPL_breaks_invisibility STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_breaks_invisibility STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_hostile STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_hostile STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_no_LOS STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_no_LOS STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_outdoors_only STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_outdoors_only STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_not_magical STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_not_magical STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_contingency STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_contingency STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_not_wild_dead STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_not_wild_dead STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_not_wild_surge STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_not_wild_surge STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_not_in_combat STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_not_in_combat STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1a BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_bypass_II STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1b (BYTE_AT 0x1b BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1b (BYTE_AT 0x1b BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_bypass_II STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1b BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_castable_when_silenced STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1b (BYTE_AT 0x1b BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1b (BYTE_AT 0x1b BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_castable_when_silenced STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1b BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_chaotic_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_chaotic_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_evil_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_evil_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_good_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_good_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_GEneutral_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_GEneutral_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_lawful_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_lawful_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_LCneutral_priest STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_LCneutral_priest STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_abjurer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_abjurer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_conjurer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1e (BYTE_AT 0x1e BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_conjurer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1e BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_diviner STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_diviner STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_enchanter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_enchanter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_illusionist STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_illusionist STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_invoker STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_invoker STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_necromancer STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_necromancer STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_transmuter STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_transmuter STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_generalist STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1f (BYTE_AT 0x1f BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_generalist STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1f BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_cleric STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_cleric STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_unusable_druid STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_unusable_druid STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_spell STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_spell STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_spells STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_spells STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_breath STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_breath STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_breath STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_breath STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_death STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_death STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_wand STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_wand STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_wands STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_wands STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_polymorph STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_polymorph STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_polymorph STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x40 + offset_secondary) (BYTE_AT (0x40 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_polymorph STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x40 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_bypass_mirror_image STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x27 + offset_secondary) (BYTE_AT (0x27 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x27 + offset_secondary) (BYTE_AT (0x27 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_bypass_mirror_image STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x27 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_fist_only STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x48 + offset_secondary) (BYTE_AT (0x48 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x48 + offset_secondary) (BYTE_AT (0x48 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_fist_only STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x48 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_poison STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_poison STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_wands STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_wands STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_petrification STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_petrification STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_vs_spells STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x24 + offset_secondary) (BYTE_AT (0x24 + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_vs_spells STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x24 + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_ignore_primary_target STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x25 + offset_secondary) (BYTE_AT (0x25 + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x25 + offset_secondary) (BYTE_AT (0x25 + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_ignore_primary_target STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x25 + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_ignore_secondary_target STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x25 + offset_secondary) (BYTE_AT (0x25 + offset_secondary) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x25 + offset_secondary) (BYTE_AT (0x25 + offset_secondary) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_ignore_secondary_target STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x25 + offset_secondary) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_ignore_difficulty STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x27 + offset_secondary) (BYTE_AT (0x27 + offset_secondary) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x27 + offset_secondary) (BYTE_AT (0x27 + offset_secondary) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_ignore_difficulty STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x27 + offset_secondary) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_does_not_wake_sleeper STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x2d + offset_secondary) (BYTE_AT (0x2d + offset_secondary) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x2d + offset_secondary) (BYTE_AT (0x2d + offset_secondary) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_does_not_wake_sleeper STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x2d + offset_secondary) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION SPL_save_for_half STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x2d + offset_secondary) (BYTE_AT (0x2d + offset_secondary) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x2d + offset_secondary) (BYTE_AT (0x2d + offset_secondary) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION SPL_read_save_for_half STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x2d + offset_secondary) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                          DEFINE_PATCH_FUNCTION STO_store_type_code 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x8 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_store_type_codeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x8 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x8 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_store_type_codeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x8 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x8 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_store_type_code 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x8 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_name_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0xc arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_name_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0xc < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0xc arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_name_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0xc > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0xc arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_name_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0xc value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_sell_markup 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x14 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_sell_markupGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x14 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x14 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_sell_markupLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x14 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x14 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_sell_markup 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x14 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_buy_markup 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x18 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_buy_markupGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x18 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x18 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_buy_markupLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x18 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x18 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_buy_markup 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x18 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_depreciation_rate 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x1c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_depreciation_rateGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x1c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x1c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_depreciation_rateLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x1c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x1c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_depreciation_rate 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x1c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_will_depreciate 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_BYTE 0x1d arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_will_depreciateGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF BYTE_AT 0x1d < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_BYTE 0x1d arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_will_depreciateLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF BYTE_AT 0x1d > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_BYTE 0x1d arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_will_depreciate 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_BYTE 0x1d value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_stealing_failure_rate 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x20 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_stealing_failure_rateGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x20 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x20 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_stealing_failure_rateLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x20 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x20 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_stealing_failure_rate 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x20 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_space 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT 0x22 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_spaceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT 0x22 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT 0x22 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_spaceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT 0x22 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT 0x22 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_space 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT 0x22 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_lore 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x3c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_loreGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x3c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x3c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_loreLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x3c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x3c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_lore 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x3c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_identify_cost 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x40 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_identify_costGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x40 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x40 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_identify_costLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x40 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x40 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_identify_cost 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x40 value 
                          END
                          
 DEFINE_PATCH_FUNCTION STO_rumors 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x44 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x44 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION STO_read_rumors 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x44 value 
                            END
                            
 DEFINE_PATCH_FUNCTION STO_rumors_donation 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x54 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x54 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION STO_read_rumors_donation 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x54 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION STO_price_peasant 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x60 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_peasantGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x60 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x60 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_peasantLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x60 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x60 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_price_peasant 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x60 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_price_merchant 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x64 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_merchantGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x64 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x64 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_merchantLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x64 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x64 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_price_merchant 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x64 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_price_noble 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x68 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_nobleGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x68 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x68 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_nobleLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x68 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x68 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_price_noble 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x68 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_price_royal 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x6c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_royalGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x6c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x6c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_price_royalLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x6c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x6c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_price_royal 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x6c value 
                          END
                          
 DEFINE_PATCH_FUNCTION STO_item_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION STO_read_item_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION STO_item_charges_1 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xa + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_charges_1GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xa + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xa + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_charges_1LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xa + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xa + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_item_charges_1 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xa + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_item_charges_2 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_charges_2GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_charges_2LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_item_charges_2 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xc + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_item_charges_3 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_SHORT (0xe + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_charges_3GT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF SHORT_AT (0xe + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_SHORT (0xe + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_charges_3LT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF SHORT_AT (0xe + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_SHORT (0xe + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_item_charges_3 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_SHORT (0xe + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_item_num_in_stock 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x14 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_num_in_stockGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x14 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x14 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_num_in_stockLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x14 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x14 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_item_num_in_stock 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x14 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_items_infinite 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x18 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_items_infiniteGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x18 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x18 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_items_infiniteLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x18 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x18 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_items_infinite 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x18 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION STO_cure_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION STO_read_cure_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION STO_item_bought 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_boughtGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_item_boughtLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_item_bought 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x0 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION STO_cure 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION STO_read_cure 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION STO_cure_price 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_cure_priceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_cure_priceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_cure_price 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_drinkname_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_drinkname_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_drinkname_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_drinkname_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION STO_special_rumor 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION STO_read_special_rumor 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION STO_drink_price 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_drink_priceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_drink_priceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_drink_price 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0xc + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_intoxication 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x10 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_intoxicationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x10 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x10 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_intoxicationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x10 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x10 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_intoxication 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x10 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION STO_rumor_rate 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x10 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_rumor_rateGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x10 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x10 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_rumor_rateLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x10 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x10 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION STO_read_rumor_rate 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x10 + offset_base) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION STO_room_peasant STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_room_peasant STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x5c + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_room_merchant STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_room_merchant STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x5c + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_room_noble STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_room_noble STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x5c + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_room_royal STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x5c + offset_base) (BYTE_AT (0x5c + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_room_royal STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x5c + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_buy STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_buy STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_sell STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_sell STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_identify STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_identify STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_steal STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_steal STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_buy_cures STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_buy_cures STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_donate STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_donate STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_can_buy_drinks STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_can_buy_drinks STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_quality_bit_0 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_quality_bit_0 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_quality_bit_1 STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_quality_bit_1 STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_fence STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x11 + offset_base) (BYTE_AT (0x11 + offset_base) BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x11 + offset_base) (BYTE_AT (0x11 + offset_base) BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_fence STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x11 + offset_base) BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_state_identified STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_state_identified STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_state_unstealable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_state_unstealable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION STO_state_stolen STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x10 + offset_base) (BYTE_AT (0x10 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION STO_read_state_stolen STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x10 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                          DEFINE_PATCH_FUNCTION VEF_ticks_until_start 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_ticks_until_startGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_ticks_until_startLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_read_ticks_until_start 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x0 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VEF_ticks_until_loop 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x8 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_ticks_until_loopGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x8 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x8 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_ticks_until_loopLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x8 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x8 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_read_ticks_until_loop 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x8 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VEF_resource_type 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0xc + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_resource_typeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0xc + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0xc + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_resource_typeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0xc + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0xc + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_read_resource_type 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0xc + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION VEF_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x10 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x10 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VEF_read_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x10 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION VEF_continuous 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x18 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_continuousGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x18 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x18 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_continuousLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x18 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x18 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VEF_read_continuous 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x18 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION VVC_anim 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x8 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x8 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_anim 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x8 value 
                            END
                            
 DEFINE_PATCH_FUNCTION VVC_anim0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x8 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x8 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_anim0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x8 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION VVC_x_pos 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x28 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_x_posGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x28 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x28 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_x_posLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x28 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x28 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_x_pos 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x28 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_y_pos 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x2c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_y_posGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x2c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x2c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_y_posLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x2c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x2c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_y_pos 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x2c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_orientation 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x30 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_orientationGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x30 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x30 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_orientationLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x30 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x30 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_orientation 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x30 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_frame_rate 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x34 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_frame_rateGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x34 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x34 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_frame_rateLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x34 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x34 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_frame_rate 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x34 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_num_orient 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x38 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_num_orientGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x38 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x38 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_num_orientLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x38 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x38 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_num_orient 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x38 value 
                          END
                          
 DEFINE_PATCH_FUNCTION VVC_palette 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x44 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x44 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_palette 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x44 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION VVC_z_pos 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x4c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_z_posGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x4c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x4c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_z_posLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x4c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x4c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_z_pos 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x4c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_ctr_x 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x50 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_ctr_xGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x50 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x50 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_ctr_xLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x50 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x50 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_ctr_x 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x50 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_ctr_y 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x54 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_ctr_yGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x54 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x54 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_ctr_yLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x54 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x54 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_ctr_y 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x54 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_brightness 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x58 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_brightnessGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x58 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x58 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_brightnessLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x58 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x58 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_brightness 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x58 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_num_frames 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x5c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_num_framesGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x5c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x5c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_num_framesLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x5c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x5c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_num_frames 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x5c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_seq_start 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x68 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_startGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x68 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x68 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_startLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x68 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x68 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_seq_start 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x68 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_seq_middle 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x6c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_middleGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x6c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x6c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_middleLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x6c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x6c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_seq_middle 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x6c value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_seq_current 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x70 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_currentGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x70 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x70 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_currentLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x70 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x70 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_seq_current 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x70 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION VVC_continuous 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x74 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_continuousGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x74 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x74 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_continuousLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x74 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x74 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_continuous 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x74 value 
                          END
                          
 DEFINE_PATCH_FUNCTION VVC_wav_start 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x78 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x78 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_wav_start 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x78 value 
                            END
                            
 DEFINE_PATCH_FUNCTION VVC_wav_middle 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x80 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x80 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_wav_middle 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x80 value 
                            END
                            
 DEFINE_PATCH_FUNCTION VVC_wav_start0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x78 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x78 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_wav_start0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x78 value 
                            END
                            
 DEFINE_PATCH_FUNCTION VVC_wav_middle0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x80 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x80 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_wav_middle0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x80 value 
                            END
                            
 DEFINE_PATCH_FUNCTION VVC_alpha 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x88 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x88 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_alpha 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x88 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION VVC_seq_end 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x90 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_endGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x90 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x90 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_seq_endLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x90 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x90 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION VVC_read_seq_end 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x90 value 
                          END
                          
 DEFINE_PATCH_FUNCTION VVC_wav_end 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x94 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x94 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_wav_end 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x94 value 
                            END
                            
 DEFINE_PATCH_FUNCTION VVC_wav_end0 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x94 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x94 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION VVC_read_wav_end0 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x94 value 
                            END
                            
 
                       DEFINE_PATCH_FUNCTION VVC_transparent STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_transparent STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_translucent STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_translucent STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_translucent_shadow STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_translucent_shadow STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_blended STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_blended STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_mirror_x STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_mirror_x STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_mirror_y STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_mirror_y STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_clip STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_clip STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_copy_from_back STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x18 (BYTE_AT 0x18 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_copy_from_back STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x18 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_clear_fill STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_clear_fill STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_3d_blend STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_3d_blend STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_ignore_wall STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_ignore_wall STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_ignore_timestop STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_ignore_timestop STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_ignore_dream STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_ignore_dream STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_2d_blend STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x19 (BYTE_AT 0x19 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_2d_blend STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x19 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_not_light_source STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_not_light_source STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1a BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_light_source STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_light_source STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1a BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_internal_brightness STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_internal_brightness STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1a BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_timestopped STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1a (BYTE_AT 0x1a BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_timestopped STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1a BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_sepia STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x1b (BYTE_AT 0x1b BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x1b (BYTE_AT 0x1b BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_sepia STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x1b BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_looping STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_looping STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_special_lighting STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_special_lighting STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_modify_for_height STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_modify_for_height STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_draw_animation STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_draw_animation STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_custom_palette STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 239)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 16)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_custom_palette STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 16)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_purgeable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 223)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 32)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_purgeable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 32)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_ignore_wallgroups STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 191)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 64)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_ignore_wallgroups STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 64)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_mid_level_brighten STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BAND 127)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x20 (BYTE_AT 0x20 BOR 128)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_mid_level_brighten STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x20 BAND 128)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_high_level_brighten STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x21 (BYTE_AT 0x21 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_high_level_brighten STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x21 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_orbit_target STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_orbit_target STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_relative_to_target STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_relative_to_target STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION VVC_ignore_orientation STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE 0x40 (BYTE_AT 0x40 BOR 8)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION VVC_read_ignore_orientation STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT 0x40 BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                          DEFINE_PATCH_FUNCTION WMP_width 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x18 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_widthGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x18 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x18 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_widthLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x18 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x18 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_width 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x18 value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_height 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x1c arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_heightGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x1c < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x1c arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_heightLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x1c > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x1c arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_height 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x1c value 
                          END
                          
 DEFINE_PATCH_FUNCTION WMP_icons 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x40 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x40 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_icons 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x40 value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION WMP_global_name_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG 0x24 arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_global_name_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT 0x24 < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG 0x24 arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_global_name_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT 0x24 > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG 0x24 arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_global_name_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG 0x24 value 
                          END
                          
 DEFINE_PATCH_FUNCTION WMP_map 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII 0x10 "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE 0x10 "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_map 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII 0x10 value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_short_name 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x0 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x0 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_short_name 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x0 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_resource 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x8 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x8 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_resource 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x8 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_long_name  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x10 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x10 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_long_name 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x10 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION WMP_sequence 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x34 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_sequenceGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x34 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x34 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_sequenceLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x34 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x34 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_sequence 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x34 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_x 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x38 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_xGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x38 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x38 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_xLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x38 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x38 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_x 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x38 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_y 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x3c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_yGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x3c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x3c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_yLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x3c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x3c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_y 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x3c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_name_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x40 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_name_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x40 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x40 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_name_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x40 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x40 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_name_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x40 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_tooltip_string 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x44 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_tooltip_stringGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x44 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x44 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_tooltip_stringLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x44 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x44 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_tooltip_string 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x44 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION WMP_loadscreen 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x48 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x48 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_loadscreen 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x48 + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_north 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x50 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_northGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x50 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x50 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_northLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x50 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x50 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_ind_north 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x50 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_west 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x58 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_westGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x58 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x58 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_westLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x58 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x58 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_ind_west 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x58 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_south 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x60 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_southGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x60 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x60 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_southLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x60 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x60 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_ind_south 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x60 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_east 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x68 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_eastGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x68 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x68 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_ind_eastLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x68 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x68 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_ind_east 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x68 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_north 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x54 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_northGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x54 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x54 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_northLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x54 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x54 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_num_north 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x54 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_west 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x5c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_westGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x5c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x5c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_westLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x5c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x5c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_num_west 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x5c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_south 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x64 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_southGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x64 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x64 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_southLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x64 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x64 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_num_south 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x64 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_east 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x6c + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_eastGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x6c + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x6c + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_area_link_num_eastLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x6c + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x6c + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_area_link_num_east 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x6c + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_link_dest_ind 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x0 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_link_dest_indGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x0 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x0 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_link_dest_indLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x0 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x0 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_link_dest_ind 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x0 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION WMP_entrance  
                                         STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                   WRITE_ASCII (0x4 + offset_base) "" (0x20) 
                                             END 
                                             DEFAULT 
                                                   WRITE_ASCIIE (0x4 + offset_base) "%arguments%" (0x20) 
                                        END 
                                        SET value=1 
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_entrance 
                                        STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                       READ_ASCII (0x4 + offset_base) value (0x20) NULL   
                            END
                            
 
                          DEFINE_PATCH_FUNCTION WMP_link_travtime_div_four 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x24 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_link_travtime_div_fourGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x24 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x24 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_link_travtime_div_fourLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x24 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x24 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_link_travtime_div_four 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x24 + offset_base) value 
                          END
                          
 DEFINE_PATCH_FUNCTION WMP_random_area_1 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x2c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x2c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_random_area_1 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x2c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_random_area_2 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x34 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x34 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_random_area_2 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x34 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_random_area_3 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x3c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x3c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_random_area_3 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x3c + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_random_area_4 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x44 + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x44 + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_random_area_4 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x44 + offset_base) value 
                            END
                            
 DEFINE_PATCH_FUNCTION WMP_random_area_5 
                                      STR_VAR arguments="" RET value 
                            BEGIN 
                                         
                                        PATCH_MATCH "%arguments%" WITH 
                                             no_change BEGIN END 
                                             null BEGIN 
                                                     WRITE_ASCII (0x4c + offset_base) "" (8) 
                                             END 
                                             DEFAULT 
                                                     WRITE_ASCIIE (0x4c + offset_base) "%arguments%" (8) 
                                        END 
                                        SET value=1
                            END
                            DEFINE_PATCH_FUNCTION WMP_read_random_area_5 
                                         STR_VAR arguments=~null~ RET value 
                            BEGIN 
                                        READ_ASCII (0x4c + offset_base) value 
                            END
                            
 
                          DEFINE_PATCH_FUNCTION WMP_random_prob 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x54 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_random_probGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x54 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x54 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_random_probLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x54 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x54 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_random_prob 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x54 + offset_base) value 
                          END
                          
 
                          DEFINE_PATCH_FUNCTION WMP_link_entryloc_code 
                                   STR_VAR arguments="" RET value 
                          BEGIN 
                                   LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                   PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                          WRITE_LONG (0x28 + offset_base) arguments 
                                   END 
                                   SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_link_entryloc_codeGT 
                                  STR_VAR arguments="" RET value 
                          BEGIN 
                                    LPF fail_unless_int STR_VAR value="%arguments%" expression="" END 
                                    PATCH_IF LONG_AT (0x28 + offset_base) < arguments BEGIN 
                                           PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                     WRITE_LONG (0x28 + offset_base) arguments 
                                           END 
                                    END 
                                    SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_link_entryloc_codeLT 
                                    STR_VAR arguments="" RET value 
                          BEGIN 
                                     LPF fail_unless_int STR_VAR value="%arguments%" expression="" END  
                                     PATCH_IF LONG_AT (0x28 + offset_base) > arguments BEGIN 
                                                PATCH_IF "%arguments%" STRING_COMPARE no_change BEGIN 
                                                          WRITE_LONG (0x28 + offset_base) arguments 
                                                END 
                                     END 
                                     SET value=1 
                          END
                          DEFINE_PATCH_FUNCTION WMP_read_link_entryloc_code 
                                     STR_VAR arguments=~null~ RET value 
                          BEGIN
                                     READ_LONG (0x28 + offset_base) value 
                          END
                          
 
                       DEFINE_PATCH_FUNCTION WMP_visible STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BAND 254)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BOR 1)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION WMP_read_visible STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x30 + offset_base) BAND 1)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION WMP_visible_from_adjacent STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BAND 253)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BOR 2)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION WMP_read_visible_from_adjacent STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x30 + offset_base) BAND 2)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION WMP_reachable STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BAND 251)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BOR 4)
                                     END
                                     SET value=1
                       END
                       DEFINE_PATCH_FUNCTION WMP_read_reachable STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x30 + offset_base) BAND 4)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END
                       
 
                       DEFINE_PATCH_FUNCTION WMP_visited STR_VAR arguments="" RET value BEGIN
                                     LPF fail_unless_boolean STR_VAR value="%arguments%" expression="" END
                                     PATCH_IF arguments=0 BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BAND 247)
                                     END ELSE BEGIN
                                        WRITE_BYTE (0x30 + offset_base) (BYTE_AT (0x30 + offset_base) BOR 8)
                                     END
                                     SET value=1

                       END

                       DEFINE_PATCH_FUNCTION WMP_read_visited STR_VAR arguments="" RET value BEGIN
                                     PATCH_IF (BYTE_AT (0x30 + offset_base) BAND 8)  = 0 BEGIN
                                        SET value=0
                                     END ELSE BEGIN
                                        SET value=1
                                     END
                       END

                       
